{"id":"node_modules/codemirror/mode/xml/xml.js","dependencies":[{"name":"/Users/matteo/projects/minerva/ts-socketio/client/package.json","includedInParent":true,"mtime":1644631103482},{"name":"/Users/matteo/projects/minerva/ts-socketio/client/node_modules/codemirror/package.json","includedInParent":true,"mtime":1644631103477},{"name":"../../lib/codemirror","loc":{"line":6,"column":16,"index":237},"parent":"/Users/matteo/projects/minerva/ts-socketio/client/node_modules/codemirror/mode/xml/xml.js","resolved":"/Users/matteo/projects/minerva/ts-socketio/client/node_modules/codemirror/lib/codemirror.js"}],"generated":{"js":"var define;\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar htmlConfig = {\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\n                    'track': true, 'wbr': true, 'menuitem': true},\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\n                     'th': true, 'tr': true},\n  contextGrabbers: {\n    'dd': {'dd': true, 'dt': true},\n    'dt': {'dd': true, 'dt': true},\n    'li': {'li': true},\n    'option': {'option': true, 'optgroup': true},\n    'optgroup': {'optgroup': true},\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\n    'rp': {'rp': true, 'rt': true},\n    'rt': {'rp': true, 'rt': true},\n    'tbody': {'tbody': true, 'tfoot': true},\n    'td': {'td': true, 'th': true},\n    'tfoot': {'tbody': true},\n    'th': {'td': true, 'th': true},\n    'thead': {'tbody': true, 'tfoot': true},\n    'tr': {'tr': true}\n  },\n  doNotIndent: {\"pre\": true},\n  allowUnquoted: true,\n  allowMissing: true,\n  caseFold: true\n}\n\nvar xmlConfig = {\n  autoSelfClosers: {},\n  implicitlyClosed: {},\n  contextGrabbers: {},\n  doNotIndent: {},\n  allowUnquoted: false,\n  allowMissing: false,\n  allowMissingTagName: false,\n  caseFold: false\n}\n\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\n  var indentUnit = editorConf.indentUnit\n  var config = {}\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\n  for (var prop in defaults) config[prop] = defaults[prop]\n  for (var prop in config_) config[prop] = config_[prop]\n\n  // Return variables for tokenizers\n  var type, setStyle;\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var ch = stream.next();\n    if (ch == \"<\") {\n      if (stream.eat(\"!\")) {\n        if (stream.eat(\"[\")) {\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\n          else return null;\n        } else if (stream.match(\"--\")) {\n          return chain(inBlock(\"comment\", \"-->\"));\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          return chain(doctype(1));\n        } else {\n          return null;\n        }\n      } else if (stream.eat(\"?\")) {\n        stream.eatWhile(/[\\w\\._\\-]/);\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return \"meta\";\n      } else {\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n        state.tokenize = inTag;\n        return \"tag bracket\";\n      }\n    } else if (ch == \"&\") {\n      var ok;\n      if (stream.eat(\"#\")) {\n        if (stream.eat(\"x\")) {\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n        } else {\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n        }\n      } else {\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n      }\n      return ok ? \"atom\" : \"error\";\n    } else {\n      stream.eatWhile(/[^&<]/);\n      return null;\n    }\n  }\n  inText.isInText = true;\n\n  function inTag(stream, state) {\n    var ch = stream.next();\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\n      state.tokenize = inText;\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n      return \"tag bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n      return null;\n    } else if (ch == \"<\") {\n      state.tokenize = inText;\n      state.state = baseState;\n      state.tagName = state.tagStart = null;\n      var next = state.tokenize(stream, state);\n      return next ? next + \" tag error\" : \"tag error\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      state.stringStartCol = stream.column();\n      return state.tokenize(stream, state);\n    } else {\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n      return \"word\";\n    }\n  }\n\n  function inAttribute(quote) {\n    var closure = function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inTag;\n          break;\n        }\n      }\n      return \"string\";\n    };\n    closure.isInAttribute = true;\n    return closure;\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    }\n  }\n\n  function doctype(depth) {\n    return function(stream, state) {\n      var ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == \"<\") {\n          state.tokenize = doctype(depth + 1);\n          return state.tokenize(stream, state);\n        } else if (ch == \">\") {\n          if (depth == 1) {\n            state.tokenize = inText;\n            break;\n          } else {\n            state.tokenize = doctype(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n      return \"meta\";\n    };\n  }\n\n  function lower(tagName) {\n    return tagName && tagName.toLowerCase();\n  }\n\n  function Context(state, tagName, startOfLine) {\n    this.prev = state.context;\n    this.tagName = tagName || \"\";\n    this.indent = state.indented;\n    this.startOfLine = startOfLine;\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\n      this.noIndent = true;\n  }\n  function popContext(state) {\n    if (state.context) state.context = state.context.prev;\n  }\n  function maybePopContext(state, nextTagName) {\n    var parentTagName;\n    while (true) {\n      if (!state.context) {\n        return;\n      }\n      parentTagName = state.context.tagName;\n      if (!config.contextGrabbers.hasOwnProperty(lower(parentTagName)) ||\n          !config.contextGrabbers[lower(parentTagName)].hasOwnProperty(lower(nextTagName))) {\n        return;\n      }\n      popContext(state);\n    }\n  }\n\n  function baseState(type, stream, state) {\n    if (type == \"openTag\") {\n      state.tagStart = stream.column();\n      return tagNameState;\n    } else if (type == \"closeTag\") {\n      return closeTagNameState;\n    } else {\n      return baseState;\n    }\n  }\n  function tagNameState(type, stream, state) {\n    if (type == \"word\") {\n      state.tagName = stream.current();\n      setStyle = \"tag\";\n      return attrState;\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return attrState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return tagNameState;\n    }\n  }\n  function closeTagNameState(type, stream, state) {\n    if (type == \"word\") {\n      var tagName = stream.current();\n      if (state.context && state.context.tagName != tagName &&\n          config.implicitlyClosed.hasOwnProperty(lower(state.context.tagName)))\n        popContext(state);\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\n        setStyle = \"tag\";\n        return closeState;\n      } else {\n        setStyle = \"tag error\";\n        return closeStateErr;\n      }\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return closeState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return closeStateErr;\n    }\n  }\n\n  function closeState(type, _stream, state) {\n    if (type != \"endTag\") {\n      setStyle = \"error\";\n      return closeState;\n    }\n    popContext(state);\n    return baseState;\n  }\n  function closeStateErr(type, stream, state) {\n    setStyle = \"error\";\n    return closeState(type, stream, state);\n  }\n\n  function attrState(type, _stream, state) {\n    if (type == \"word\") {\n      setStyle = \"attribute\";\n      return attrEqState;\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n      var tagName = state.tagName, tagStart = state.tagStart;\n      state.tagName = state.tagStart = null;\n      if (type == \"selfcloseTag\" ||\n          config.autoSelfClosers.hasOwnProperty(lower(tagName))) {\n        maybePopContext(state, tagName);\n      } else {\n        maybePopContext(state, tagName);\n        state.context = new Context(state, tagName, tagStart == state.indented);\n      }\n      return baseState;\n    }\n    setStyle = \"error\";\n    return attrState;\n  }\n  function attrEqState(type, stream, state) {\n    if (type == \"equals\") return attrValueState;\n    if (!config.allowMissing) setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrValueState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\n    setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrContinuedState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    return attrState(type, stream, state);\n  }\n\n  return {\n    startState: function(baseIndent) {\n      var state = {tokenize: inText,\n                   state: baseState,\n                   indented: baseIndent || 0,\n                   tagName: null, tagStart: null,\n                   context: null}\n      if (baseIndent != null) state.baseIndent = baseIndent\n      return state\n    },\n\n    token: function(stream, state) {\n      if (!state.tagName && stream.sol())\n        state.indented = stream.indentation();\n\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n      if ((style || type) && style != \"comment\") {\n        setStyle = null;\n        state.state = state.state(type || style, stream, state);\n        if (setStyle)\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter, fullLine) {\n      var context = state.context;\n      // Indent multi-line strings (e.g. css).\n      if (state.tokenize.isInAttribute) {\n        if (state.tagStart == state.indented)\n          return state.stringStartCol + 1;\n        else\n          return state.indented + indentUnit;\n      }\n      if (context && context.noIndent) return CodeMirror.Pass;\n      if (state.tokenize != inTag && state.tokenize != inText)\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\n      // Indent the starts of attribute names.\n      if (state.tagName) {\n        if (config.multilineTagIndentPastTag !== false)\n          return state.tagStart + state.tagName.length + 2;\n        else\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n      }\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\n        while (context) {\n          if (context.tagName == tagAfter[2]) {\n            context = context.prev;\n            break;\n          } else if (config.implicitlyClosed.hasOwnProperty(lower(context.tagName))) {\n            context = context.prev;\n          } else {\n            break;\n          }\n        }\n      } else if (tagAfter) { // Opening tag spotted\n        while (context) {\n          var grabbers = config.contextGrabbers[lower(context.tagName)];\n          if (grabbers && grabbers.hasOwnProperty(lower(tagAfter[2])))\n            context = context.prev;\n          else\n            break;\n        }\n      }\n      while (context && context.prev && !context.startOfLine)\n        context = context.prev;\n      if (context) return context.indent + indentUnit;\n      else return state.baseIndent || 0;\n    },\n\n    electricInput: /<\\/[\\s\\w:]+>$/,\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n\n    configuration: config.htmlMode ? \"html\" : \"xml\",\n    helperType: config.htmlMode ? \"html\" : \"xml\",\n\n    skipAttribute: function(state) {\n      if (state.state == attrValueState)\n        state.state = attrState\n    },\n\n    xmlCurrentTag: function(state) {\n      return state.tagName ? {name: state.tagName, close: state.type == \"closeTag\"} : null\n    },\n\n    xmlCurrentContext: function(state) {\n      var context = []\n      for (var cx = state.context; cx; cx = cx.prev)\n        context.push(cx.tagName)\n      return context.reverse()\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\n\n});\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":307,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":308,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":309,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":310,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":311,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":312,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":313,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":314,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":315,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":316,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":317,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":318,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":319,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":320,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":321,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":322,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":323,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":324,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":325,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":326,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":327,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":328,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":329,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":330,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":331,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":332,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":333,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":334,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":335,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":336,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":337,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":338,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":339,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":340,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":341,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":342,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":343,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":344,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":345,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":346,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":347,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":348,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":349,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":350,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":351,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":352,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":353,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":354,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":355,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":356,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":357,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":358,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":359,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":360,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":361,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":362,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":363,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":364,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":365,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":366,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":367,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":368,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":369,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":370,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":371,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":372,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":373,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":374,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":375,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":376,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":377,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":378,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":379,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":380,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":381,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":382,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":383,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":384,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":385,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":386,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":387,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":388,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":389,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":390,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":391,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":392,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":393,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":394,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":395,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":396,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":397,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":398,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":399,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":400,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":401,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":402,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":403,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":404,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":405,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":406,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":407,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":408,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":409,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":410,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":411,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":412,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":413,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":414,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":415,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":416,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":417,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/codemirror/mode/xml/xml.js","original":{"line":418,"column":0},"generated":{"line":419,"column":0}}],"sources":{"node_modules/codemirror/mode/xml/xml.js":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar htmlConfig = {\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\n                    'track': true, 'wbr': true, 'menuitem': true},\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\n                     'th': true, 'tr': true},\n  contextGrabbers: {\n    'dd': {'dd': true, 'dt': true},\n    'dt': {'dd': true, 'dt': true},\n    'li': {'li': true},\n    'option': {'option': true, 'optgroup': true},\n    'optgroup': {'optgroup': true},\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\n    'rp': {'rp': true, 'rt': true},\n    'rt': {'rp': true, 'rt': true},\n    'tbody': {'tbody': true, 'tfoot': true},\n    'td': {'td': true, 'th': true},\n    'tfoot': {'tbody': true},\n    'th': {'td': true, 'th': true},\n    'thead': {'tbody': true, 'tfoot': true},\n    'tr': {'tr': true}\n  },\n  doNotIndent: {\"pre\": true},\n  allowUnquoted: true,\n  allowMissing: true,\n  caseFold: true\n}\n\nvar xmlConfig = {\n  autoSelfClosers: {},\n  implicitlyClosed: {},\n  contextGrabbers: {},\n  doNotIndent: {},\n  allowUnquoted: false,\n  allowMissing: false,\n  allowMissingTagName: false,\n  caseFold: false\n}\n\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\n  var indentUnit = editorConf.indentUnit\n  var config = {}\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\n  for (var prop in defaults) config[prop] = defaults[prop]\n  for (var prop in config_) config[prop] = config_[prop]\n\n  // Return variables for tokenizers\n  var type, setStyle;\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var ch = stream.next();\n    if (ch == \"<\") {\n      if (stream.eat(\"!\")) {\n        if (stream.eat(\"[\")) {\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\n          else return null;\n        } else if (stream.match(\"--\")) {\n          return chain(inBlock(\"comment\", \"-->\"));\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          return chain(doctype(1));\n        } else {\n          return null;\n        }\n      } else if (stream.eat(\"?\")) {\n        stream.eatWhile(/[\\w\\._\\-]/);\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return \"meta\";\n      } else {\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n        state.tokenize = inTag;\n        return \"tag bracket\";\n      }\n    } else if (ch == \"&\") {\n      var ok;\n      if (stream.eat(\"#\")) {\n        if (stream.eat(\"x\")) {\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n        } else {\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n        }\n      } else {\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n      }\n      return ok ? \"atom\" : \"error\";\n    } else {\n      stream.eatWhile(/[^&<]/);\n      return null;\n    }\n  }\n  inText.isInText = true;\n\n  function inTag(stream, state) {\n    var ch = stream.next();\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\n      state.tokenize = inText;\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n      return \"tag bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n      return null;\n    } else if (ch == \"<\") {\n      state.tokenize = inText;\n      state.state = baseState;\n      state.tagName = state.tagStart = null;\n      var next = state.tokenize(stream, state);\n      return next ? next + \" tag error\" : \"tag error\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      state.stringStartCol = stream.column();\n      return state.tokenize(stream, state);\n    } else {\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n      return \"word\";\n    }\n  }\n\n  function inAttribute(quote) {\n    var closure = function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inTag;\n          break;\n        }\n      }\n      return \"string\";\n    };\n    closure.isInAttribute = true;\n    return closure;\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    }\n  }\n\n  function doctype(depth) {\n    return function(stream, state) {\n      var ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == \"<\") {\n          state.tokenize = doctype(depth + 1);\n          return state.tokenize(stream, state);\n        } else if (ch == \">\") {\n          if (depth == 1) {\n            state.tokenize = inText;\n            break;\n          } else {\n            state.tokenize = doctype(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n      return \"meta\";\n    };\n  }\n\n  function lower(tagName) {\n    return tagName && tagName.toLowerCase();\n  }\n\n  function Context(state, tagName, startOfLine) {\n    this.prev = state.context;\n    this.tagName = tagName || \"\";\n    this.indent = state.indented;\n    this.startOfLine = startOfLine;\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\n      this.noIndent = true;\n  }\n  function popContext(state) {\n    if (state.context) state.context = state.context.prev;\n  }\n  function maybePopContext(state, nextTagName) {\n    var parentTagName;\n    while (true) {\n      if (!state.context) {\n        return;\n      }\n      parentTagName = state.context.tagName;\n      if (!config.contextGrabbers.hasOwnProperty(lower(parentTagName)) ||\n          !config.contextGrabbers[lower(parentTagName)].hasOwnProperty(lower(nextTagName))) {\n        return;\n      }\n      popContext(state);\n    }\n  }\n\n  function baseState(type, stream, state) {\n    if (type == \"openTag\") {\n      state.tagStart = stream.column();\n      return tagNameState;\n    } else if (type == \"closeTag\") {\n      return closeTagNameState;\n    } else {\n      return baseState;\n    }\n  }\n  function tagNameState(type, stream, state) {\n    if (type == \"word\") {\n      state.tagName = stream.current();\n      setStyle = \"tag\";\n      return attrState;\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return attrState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return tagNameState;\n    }\n  }\n  function closeTagNameState(type, stream, state) {\n    if (type == \"word\") {\n      var tagName = stream.current();\n      if (state.context && state.context.tagName != tagName &&\n          config.implicitlyClosed.hasOwnProperty(lower(state.context.tagName)))\n        popContext(state);\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\n        setStyle = \"tag\";\n        return closeState;\n      } else {\n        setStyle = \"tag error\";\n        return closeStateErr;\n      }\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return closeState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return closeStateErr;\n    }\n  }\n\n  function closeState(type, _stream, state) {\n    if (type != \"endTag\") {\n      setStyle = \"error\";\n      return closeState;\n    }\n    popContext(state);\n    return baseState;\n  }\n  function closeStateErr(type, stream, state) {\n    setStyle = \"error\";\n    return closeState(type, stream, state);\n  }\n\n  function attrState(type, _stream, state) {\n    if (type == \"word\") {\n      setStyle = \"attribute\";\n      return attrEqState;\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n      var tagName = state.tagName, tagStart = state.tagStart;\n      state.tagName = state.tagStart = null;\n      if (type == \"selfcloseTag\" ||\n          config.autoSelfClosers.hasOwnProperty(lower(tagName))) {\n        maybePopContext(state, tagName);\n      } else {\n        maybePopContext(state, tagName);\n        state.context = new Context(state, tagName, tagStart == state.indented);\n      }\n      return baseState;\n    }\n    setStyle = \"error\";\n    return attrState;\n  }\n  function attrEqState(type, stream, state) {\n    if (type == \"equals\") return attrValueState;\n    if (!config.allowMissing) setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrValueState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\n    setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrContinuedState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    return attrState(type, stream, state);\n  }\n\n  return {\n    startState: function(baseIndent) {\n      var state = {tokenize: inText,\n                   state: baseState,\n                   indented: baseIndent || 0,\n                   tagName: null, tagStart: null,\n                   context: null}\n      if (baseIndent != null) state.baseIndent = baseIndent\n      return state\n    },\n\n    token: function(stream, state) {\n      if (!state.tagName && stream.sol())\n        state.indented = stream.indentation();\n\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n      if ((style || type) && style != \"comment\") {\n        setStyle = null;\n        state.state = state.state(type || style, stream, state);\n        if (setStyle)\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter, fullLine) {\n      var context = state.context;\n      // Indent multi-line strings (e.g. css).\n      if (state.tokenize.isInAttribute) {\n        if (state.tagStart == state.indented)\n          return state.stringStartCol + 1;\n        else\n          return state.indented + indentUnit;\n      }\n      if (context && context.noIndent) return CodeMirror.Pass;\n      if (state.tokenize != inTag && state.tokenize != inText)\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\n      // Indent the starts of attribute names.\n      if (state.tagName) {\n        if (config.multilineTagIndentPastTag !== false)\n          return state.tagStart + state.tagName.length + 2;\n        else\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n      }\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\n        while (context) {\n          if (context.tagName == tagAfter[2]) {\n            context = context.prev;\n            break;\n          } else if (config.implicitlyClosed.hasOwnProperty(lower(context.tagName))) {\n            context = context.prev;\n          } else {\n            break;\n          }\n        }\n      } else if (tagAfter) { // Opening tag spotted\n        while (context) {\n          var grabbers = config.contextGrabbers[lower(context.tagName)];\n          if (grabbers && grabbers.hasOwnProperty(lower(tagAfter[2])))\n            context = context.prev;\n          else\n            break;\n        }\n      }\n      while (context && context.prev && !context.startOfLine)\n        context = context.prev;\n      if (context) return context.indent + indentUnit;\n      else return state.baseIndent || 0;\n    },\n\n    electricInput: /<\\/[\\s\\w:]+>$/,\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n\n    configuration: config.htmlMode ? \"html\" : \"xml\",\n    helperType: config.htmlMode ? \"html\" : \"xml\",\n\n    skipAttribute: function(state) {\n      if (state.state == attrValueState)\n        state.state = attrState\n    },\n\n    xmlCurrentTag: function(state) {\n      return state.tagName ? {name: state.tagName, close: state.type == \"closeTag\"} : null\n    },\n\n    xmlCurrentContext: function(state) {\n      var context = []\n      for (var cx = state.context; cx; cx = cx.prev)\n        context.push(cx.tagName)\n      return context.reverse()\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\n\n});\n"},"lineCount":419}},"error":null,"hash":"e1caedb984a0c3ca2235d51df888e57f","cacheData":{"env":{}}}