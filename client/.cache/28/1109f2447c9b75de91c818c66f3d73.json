{"id":"node_modules/codemirror/addon/search/searchcursor.js","dependencies":[{"name":"/Users/matteo/projects/minerva/ts-socketio/client/package.json","includedInParent":true,"mtime":1644631103482},{"name":"/Users/matteo/projects/minerva/ts-socketio/client/node_modules/codemirror/package.json","includedInParent":true,"mtime":1644631103477},{"name":"../../lib/codemirror","loc":{"line":6,"column":16,"index":237},"parent":"/Users/matteo/projects/minerva/ts-socketio/client/node_modules/codemirror/addon/search/searchcursor.js","resolved":"/Users/matteo/projects/minerva/ts-socketio/client/node_modules/codemirror/lib/codemirror.js"}],"generated":{"js":"var define;\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"))\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod)\n  else // Plain browser env\n    mod(CodeMirror)\n})(function(CodeMirror) {\n  \"use strict\"\n  var Pos = CodeMirror.Pos\n\n  function regexpFlags(regexp) {\n    var flags = regexp.flags\n    return flags != null ? flags : (regexp.ignoreCase ? \"i\" : \"\")\n      + (regexp.global ? \"g\" : \"\")\n      + (regexp.multiline ? \"m\" : \"\")\n  }\n\n  function ensureFlags(regexp, flags) {\n    var current = regexpFlags(regexp), target = current\n    for (var i = 0; i < flags.length; i++) if (target.indexOf(flags.charAt(i)) == -1)\n      target += flags.charAt(i)\n    return current == target ? regexp : new RegExp(regexp.source, target)\n  }\n\n  function maybeMultiline(regexp) {\n    return /\\\\s|\\\\n|\\n|\\\\W|\\\\D|\\[\\^/.test(regexp.source)\n  }\n\n  function searchRegexpForward(doc, regexp, start) {\n    regexp = ensureFlags(regexp, \"g\")\n    for (var line = start.line, ch = start.ch, last = doc.lastLine(); line <= last; line++, ch = 0) {\n      regexp.lastIndex = ch\n      var string = doc.getLine(line), match = regexp.exec(string)\n      if (match)\n        return {from: Pos(line, match.index),\n                to: Pos(line, match.index + match[0].length),\n                match: match}\n    }\n  }\n\n  function searchRegexpForwardMultiline(doc, regexp, start) {\n    if (!maybeMultiline(regexp)) return searchRegexpForward(doc, regexp, start)\n\n    regexp = ensureFlags(regexp, \"gm\")\n    var string, chunk = 1\n    for (var line = start.line, last = doc.lastLine(); line <= last;) {\n      // This grows the search buffer in exponentially-sized chunks\n      // between matches, so that nearby matches are fast and don't\n      // require concatenating the whole document (in case we're\n      // searching for something that has tons of matches), but at the\n      // same time, the amount of retries is limited.\n      for (var i = 0; i < chunk; i++) {\n        if (line > last) break\n        var curLine = doc.getLine(line++)\n        string = string == null ? curLine : string + \"\\n\" + curLine\n      }\n      chunk = chunk * 2\n      regexp.lastIndex = start.ch\n      var match = regexp.exec(string)\n      if (match) {\n        var before = string.slice(0, match.index).split(\"\\n\"), inside = match[0].split(\"\\n\")\n        var startLine = start.line + before.length - 1, startCh = before[before.length - 1].length\n        return {from: Pos(startLine, startCh),\n                to: Pos(startLine + inside.length - 1,\n                        inside.length == 1 ? startCh + inside[0].length : inside[inside.length - 1].length),\n                match: match}\n      }\n    }\n  }\n\n  function lastMatchIn(string, regexp, endMargin) {\n    var match, from = 0\n    while (from <= string.length) {\n      regexp.lastIndex = from\n      var newMatch = regexp.exec(string)\n      if (!newMatch) break\n      var end = newMatch.index + newMatch[0].length\n      if (end > string.length - endMargin) break\n      if (!match || end > match.index + match[0].length)\n        match = newMatch\n      from = newMatch.index + 1\n    }\n    return match\n  }\n\n  function searchRegexpBackward(doc, regexp, start) {\n    regexp = ensureFlags(regexp, \"g\")\n    for (var line = start.line, ch = start.ch, first = doc.firstLine(); line >= first; line--, ch = -1) {\n      var string = doc.getLine(line)\n      var match = lastMatchIn(string, regexp, ch < 0 ? 0 : string.length - ch)\n      if (match)\n        return {from: Pos(line, match.index),\n                to: Pos(line, match.index + match[0].length),\n                match: match}\n    }\n  }\n\n  function searchRegexpBackwardMultiline(doc, regexp, start) {\n    if (!maybeMultiline(regexp)) return searchRegexpBackward(doc, regexp, start)\n    regexp = ensureFlags(regexp, \"gm\")\n    var string, chunkSize = 1, endMargin = doc.getLine(start.line).length - start.ch\n    for (var line = start.line, first = doc.firstLine(); line >= first;) {\n      for (var i = 0; i < chunkSize && line >= first; i++) {\n        var curLine = doc.getLine(line--)\n        string = string == null ? curLine : curLine + \"\\n\" + string\n      }\n      chunkSize *= 2\n\n      var match = lastMatchIn(string, regexp, endMargin)\n      if (match) {\n        var before = string.slice(0, match.index).split(\"\\n\"), inside = match[0].split(\"\\n\")\n        var startLine = line + before.length, startCh = before[before.length - 1].length\n        return {from: Pos(startLine, startCh),\n                to: Pos(startLine + inside.length - 1,\n                        inside.length == 1 ? startCh + inside[0].length : inside[inside.length - 1].length),\n                match: match}\n      }\n    }\n  }\n\n  var doFold, noFold\n  if (String.prototype.normalize) {\n    doFold = function(str) { return str.normalize(\"NFD\").toLowerCase() }\n    noFold = function(str) { return str.normalize(\"NFD\") }\n  } else {\n    doFold = function(str) { return str.toLowerCase() }\n    noFold = function(str) { return str }\n  }\n\n  // Maps a position in a case-folded line back to a position in the original line\n  // (compensating for codepoints increasing in number during folding)\n  function adjustPos(orig, folded, pos, foldFunc) {\n    if (orig.length == folded.length) return pos\n    for (var min = 0, max = pos + Math.max(0, orig.length - folded.length);;) {\n      if (min == max) return min\n      var mid = (min + max) >> 1\n      var len = foldFunc(orig.slice(0, mid)).length\n      if (len == pos) return mid\n      else if (len > pos) max = mid\n      else min = mid + 1\n    }\n  }\n\n  function searchStringForward(doc, query, start, caseFold) {\n    // Empty string would match anything and never progress, so we\n    // define it to match nothing instead.\n    if (!query.length) return null\n    var fold = caseFold ? doFold : noFold\n    var lines = fold(query).split(/\\r|\\n\\r?/)\n\n    search: for (var line = start.line, ch = start.ch, last = doc.lastLine() + 1 - lines.length; line <= last; line++, ch = 0) {\n      var orig = doc.getLine(line).slice(ch), string = fold(orig)\n      if (lines.length == 1) {\n        var found = string.indexOf(lines[0])\n        if (found == -1) continue search\n        var start = adjustPos(orig, string, found, fold) + ch\n        return {from: Pos(line, adjustPos(orig, string, found, fold) + ch),\n                to: Pos(line, adjustPos(orig, string, found + lines[0].length, fold) + ch)}\n      } else {\n        var cutFrom = string.length - lines[0].length\n        if (string.slice(cutFrom) != lines[0]) continue search\n        for (var i = 1; i < lines.length - 1; i++)\n          if (fold(doc.getLine(line + i)) != lines[i]) continue search\n        var end = doc.getLine(line + lines.length - 1), endString = fold(end), lastLine = lines[lines.length - 1]\n        if (endString.slice(0, lastLine.length) != lastLine) continue search\n        return {from: Pos(line, adjustPos(orig, string, cutFrom, fold) + ch),\n                to: Pos(line + lines.length - 1, adjustPos(end, endString, lastLine.length, fold))}\n      }\n    }\n  }\n\n  function searchStringBackward(doc, query, start, caseFold) {\n    if (!query.length) return null\n    var fold = caseFold ? doFold : noFold\n    var lines = fold(query).split(/\\r|\\n\\r?/)\n\n    search: for (var line = start.line, ch = start.ch, first = doc.firstLine() - 1 + lines.length; line >= first; line--, ch = -1) {\n      var orig = doc.getLine(line)\n      if (ch > -1) orig = orig.slice(0, ch)\n      var string = fold(orig)\n      if (lines.length == 1) {\n        var found = string.lastIndexOf(lines[0])\n        if (found == -1) continue search\n        return {from: Pos(line, adjustPos(orig, string, found, fold)),\n                to: Pos(line, adjustPos(orig, string, found + lines[0].length, fold))}\n      } else {\n        var lastLine = lines[lines.length - 1]\n        if (string.slice(0, lastLine.length) != lastLine) continue search\n        for (var i = 1, start = line - lines.length + 1; i < lines.length - 1; i++)\n          if (fold(doc.getLine(start + i)) != lines[i]) continue search\n        var top = doc.getLine(line + 1 - lines.length), topString = fold(top)\n        if (topString.slice(topString.length - lines[0].length) != lines[0]) continue search\n        return {from: Pos(line + 1 - lines.length, adjustPos(top, topString, top.length - lines[0].length, fold)),\n                to: Pos(line, adjustPos(orig, string, lastLine.length, fold))}\n      }\n    }\n  }\n\n  function SearchCursor(doc, query, pos, options) {\n    this.atOccurrence = false\n    this.afterEmptyMatch = false\n    this.doc = doc\n    pos = pos ? doc.clipPos(pos) : Pos(0, 0)\n    this.pos = {from: pos, to: pos}\n\n    var caseFold\n    if (typeof options == \"object\") {\n      caseFold = options.caseFold\n    } else { // Backwards compat for when caseFold was the 4th argument\n      caseFold = options\n      options = null\n    }\n\n    if (typeof query == \"string\") {\n      if (caseFold == null) caseFold = false\n      this.matches = function(reverse, pos) {\n        return (reverse ? searchStringBackward : searchStringForward)(doc, query, pos, caseFold)\n      }\n    } else {\n      query = ensureFlags(query, \"gm\")\n      if (!options || options.multiline !== false)\n        this.matches = function(reverse, pos) {\n          return (reverse ? searchRegexpBackwardMultiline : searchRegexpForwardMultiline)(doc, query, pos)\n        }\n      else\n        this.matches = function(reverse, pos) {\n          return (reverse ? searchRegexpBackward : searchRegexpForward)(doc, query, pos)\n        }\n    }\n  }\n\n  SearchCursor.prototype = {\n    findNext: function() {return this.find(false)},\n    findPrevious: function() {return this.find(true)},\n\n    find: function(reverse) {\n      var head = this.doc.clipPos(reverse ? this.pos.from : this.pos.to);\n      if (this.afterEmptyMatch && this.atOccurrence) {\n        // do not return the same 0 width match twice\n        head = Pos(head.line, head.ch)\n        if (reverse) {\n          head.ch--;\n          if (head.ch < 0) {\n            head.line--;\n            head.ch = (this.doc.getLine(head.line) || \"\").length;\n          }\n        } else {\n          head.ch++;\n          if (head.ch > (this.doc.getLine(head.line) || \"\").length) {\n            head.ch = 0;\n            head.line++;\n          }\n        }\n        if (CodeMirror.cmpPos(head, this.doc.clipPos(head)) != 0) {\n           return this.atOccurrence = false\n        }\n      }\n      var result = this.matches(reverse, head)\n      this.afterEmptyMatch = result && CodeMirror.cmpPos(result.from, result.to) == 0\n\n      if (result) {\n        this.pos = result\n        this.atOccurrence = true\n        return this.pos.match || true\n      } else {\n        var end = Pos(reverse ? this.doc.firstLine() : this.doc.lastLine() + 1, 0)\n        this.pos = {from: end, to: end}\n        return this.atOccurrence = false\n      }\n    },\n\n    from: function() {if (this.atOccurrence) return this.pos.from},\n    to: function() {if (this.atOccurrence) return this.pos.to},\n\n    replace: function(newText, origin) {\n      if (!this.atOccurrence) return\n      var lines = CodeMirror.splitLines(newText)\n      this.doc.replaceRange(lines, this.pos.from, this.pos.to, origin)\n      this.pos.to = Pos(this.pos.from.line + lines.length - 1,\n                        lines[lines.length - 1].length + (lines.length == 1 ? this.pos.from.ch : 0))\n    }\n  }\n\n  CodeMirror.defineExtension(\"getSearchCursor\", function(query, pos, caseFold) {\n    return new SearchCursor(this.doc, query, pos, caseFold)\n  })\n  CodeMirror.defineDocExtension(\"getSearchCursor\", function(query, pos, caseFold) {\n    return new SearchCursor(this, query, pos, caseFold)\n  })\n\n  CodeMirror.defineExtension(\"selectMatches\", function(query, caseFold) {\n    var ranges = []\n    var cur = this.getSearchCursor(query, this.getCursor(\"from\"), caseFold)\n    while (cur.findNext()) {\n      if (CodeMirror.cmpPos(cur.to(), this.getCursor(\"to\")) > 0) break\n      ranges.push({anchor: cur.from(), head: cur.to()})\n    }\n    if (ranges.length)\n      this.setSelections(ranges, 0)\n  })\n});\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/codemirror/addon/search/searchcursor.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}}],"sources":{"node_modules/codemirror/addon/search/searchcursor.js":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"))\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod)\n  else // Plain browser env\n    mod(CodeMirror)\n})(function(CodeMirror) {\n  \"use strict\"\n  var Pos = CodeMirror.Pos\n\n  function regexpFlags(regexp) {\n    var flags = regexp.flags\n    return flags != null ? flags : (regexp.ignoreCase ? \"i\" : \"\")\n      + (regexp.global ? \"g\" : \"\")\n      + (regexp.multiline ? \"m\" : \"\")\n  }\n\n  function ensureFlags(regexp, flags) {\n    var current = regexpFlags(regexp), target = current\n    for (var i = 0; i < flags.length; i++) if (target.indexOf(flags.charAt(i)) == -1)\n      target += flags.charAt(i)\n    return current == target ? regexp : new RegExp(regexp.source, target)\n  }\n\n  function maybeMultiline(regexp) {\n    return /\\\\s|\\\\n|\\n|\\\\W|\\\\D|\\[\\^/.test(regexp.source)\n  }\n\n  function searchRegexpForward(doc, regexp, start) {\n    regexp = ensureFlags(regexp, \"g\")\n    for (var line = start.line, ch = start.ch, last = doc.lastLine(); line <= last; line++, ch = 0) {\n      regexp.lastIndex = ch\n      var string = doc.getLine(line), match = regexp.exec(string)\n      if (match)\n        return {from: Pos(line, match.index),\n                to: Pos(line, match.index + match[0].length),\n                match: match}\n    }\n  }\n\n  function searchRegexpForwardMultiline(doc, regexp, start) {\n    if (!maybeMultiline(regexp)) return searchRegexpForward(doc, regexp, start)\n\n    regexp = ensureFlags(regexp, \"gm\")\n    var string, chunk = 1\n    for (var line = start.line, last = doc.lastLine(); line <= last;) {\n      // This grows the search buffer in exponentially-sized chunks\n      // between matches, so that nearby matches are fast and don't\n      // require concatenating the whole document (in case we're\n      // searching for something that has tons of matches), but at the\n      // same time, the amount of retries is limited.\n      for (var i = 0; i < chunk; i++) {\n        if (line > last) break\n        var curLine = doc.getLine(line++)\n        string = string == null ? curLine : string + \"\\n\" + curLine\n      }\n      chunk = chunk * 2\n      regexp.lastIndex = start.ch\n      var match = regexp.exec(string)\n      if (match) {\n        var before = string.slice(0, match.index).split(\"\\n\"), inside = match[0].split(\"\\n\")\n        var startLine = start.line + before.length - 1, startCh = before[before.length - 1].length\n        return {from: Pos(startLine, startCh),\n                to: Pos(startLine + inside.length - 1,\n                        inside.length == 1 ? startCh + inside[0].length : inside[inside.length - 1].length),\n                match: match}\n      }\n    }\n  }\n\n  function lastMatchIn(string, regexp, endMargin) {\n    var match, from = 0\n    while (from <= string.length) {\n      regexp.lastIndex = from\n      var newMatch = regexp.exec(string)\n      if (!newMatch) break\n      var end = newMatch.index + newMatch[0].length\n      if (end > string.length - endMargin) break\n      if (!match || end > match.index + match[0].length)\n        match = newMatch\n      from = newMatch.index + 1\n    }\n    return match\n  }\n\n  function searchRegexpBackward(doc, regexp, start) {\n    regexp = ensureFlags(regexp, \"g\")\n    for (var line = start.line, ch = start.ch, first = doc.firstLine(); line >= first; line--, ch = -1) {\n      var string = doc.getLine(line)\n      var match = lastMatchIn(string, regexp, ch < 0 ? 0 : string.length - ch)\n      if (match)\n        return {from: Pos(line, match.index),\n                to: Pos(line, match.index + match[0].length),\n                match: match}\n    }\n  }\n\n  function searchRegexpBackwardMultiline(doc, regexp, start) {\n    if (!maybeMultiline(regexp)) return searchRegexpBackward(doc, regexp, start)\n    regexp = ensureFlags(regexp, \"gm\")\n    var string, chunkSize = 1, endMargin = doc.getLine(start.line).length - start.ch\n    for (var line = start.line, first = doc.firstLine(); line >= first;) {\n      for (var i = 0; i < chunkSize && line >= first; i++) {\n        var curLine = doc.getLine(line--)\n        string = string == null ? curLine : curLine + \"\\n\" + string\n      }\n      chunkSize *= 2\n\n      var match = lastMatchIn(string, regexp, endMargin)\n      if (match) {\n        var before = string.slice(0, match.index).split(\"\\n\"), inside = match[0].split(\"\\n\")\n        var startLine = line + before.length, startCh = before[before.length - 1].length\n        return {from: Pos(startLine, startCh),\n                to: Pos(startLine + inside.length - 1,\n                        inside.length == 1 ? startCh + inside[0].length : inside[inside.length - 1].length),\n                match: match}\n      }\n    }\n  }\n\n  var doFold, noFold\n  if (String.prototype.normalize) {\n    doFold = function(str) { return str.normalize(\"NFD\").toLowerCase() }\n    noFold = function(str) { return str.normalize(\"NFD\") }\n  } else {\n    doFold = function(str) { return str.toLowerCase() }\n    noFold = function(str) { return str }\n  }\n\n  // Maps a position in a case-folded line back to a position in the original line\n  // (compensating for codepoints increasing in number during folding)\n  function adjustPos(orig, folded, pos, foldFunc) {\n    if (orig.length == folded.length) return pos\n    for (var min = 0, max = pos + Math.max(0, orig.length - folded.length);;) {\n      if (min == max) return min\n      var mid = (min + max) >> 1\n      var len = foldFunc(orig.slice(0, mid)).length\n      if (len == pos) return mid\n      else if (len > pos) max = mid\n      else min = mid + 1\n    }\n  }\n\n  function searchStringForward(doc, query, start, caseFold) {\n    // Empty string would match anything and never progress, so we\n    // define it to match nothing instead.\n    if (!query.length) return null\n    var fold = caseFold ? doFold : noFold\n    var lines = fold(query).split(/\\r|\\n\\r?/)\n\n    search: for (var line = start.line, ch = start.ch, last = doc.lastLine() + 1 - lines.length; line <= last; line++, ch = 0) {\n      var orig = doc.getLine(line).slice(ch), string = fold(orig)\n      if (lines.length == 1) {\n        var found = string.indexOf(lines[0])\n        if (found == -1) continue search\n        var start = adjustPos(orig, string, found, fold) + ch\n        return {from: Pos(line, adjustPos(orig, string, found, fold) + ch),\n                to: Pos(line, adjustPos(orig, string, found + lines[0].length, fold) + ch)}\n      } else {\n        var cutFrom = string.length - lines[0].length\n        if (string.slice(cutFrom) != lines[0]) continue search\n        for (var i = 1; i < lines.length - 1; i++)\n          if (fold(doc.getLine(line + i)) != lines[i]) continue search\n        var end = doc.getLine(line + lines.length - 1), endString = fold(end), lastLine = lines[lines.length - 1]\n        if (endString.slice(0, lastLine.length) != lastLine) continue search\n        return {from: Pos(line, adjustPos(orig, string, cutFrom, fold) + ch),\n                to: Pos(line + lines.length - 1, adjustPos(end, endString, lastLine.length, fold))}\n      }\n    }\n  }\n\n  function searchStringBackward(doc, query, start, caseFold) {\n    if (!query.length) return null\n    var fold = caseFold ? doFold : noFold\n    var lines = fold(query).split(/\\r|\\n\\r?/)\n\n    search: for (var line = start.line, ch = start.ch, first = doc.firstLine() - 1 + lines.length; line >= first; line--, ch = -1) {\n      var orig = doc.getLine(line)\n      if (ch > -1) orig = orig.slice(0, ch)\n      var string = fold(orig)\n      if (lines.length == 1) {\n        var found = string.lastIndexOf(lines[0])\n        if (found == -1) continue search\n        return {from: Pos(line, adjustPos(orig, string, found, fold)),\n                to: Pos(line, adjustPos(orig, string, found + lines[0].length, fold))}\n      } else {\n        var lastLine = lines[lines.length - 1]\n        if (string.slice(0, lastLine.length) != lastLine) continue search\n        for (var i = 1, start = line - lines.length + 1; i < lines.length - 1; i++)\n          if (fold(doc.getLine(start + i)) != lines[i]) continue search\n        var top = doc.getLine(line + 1 - lines.length), topString = fold(top)\n        if (topString.slice(topString.length - lines[0].length) != lines[0]) continue search\n        return {from: Pos(line + 1 - lines.length, adjustPos(top, topString, top.length - lines[0].length, fold)),\n                to: Pos(line, adjustPos(orig, string, lastLine.length, fold))}\n      }\n    }\n  }\n\n  function SearchCursor(doc, query, pos, options) {\n    this.atOccurrence = false\n    this.afterEmptyMatch = false\n    this.doc = doc\n    pos = pos ? doc.clipPos(pos) : Pos(0, 0)\n    this.pos = {from: pos, to: pos}\n\n    var caseFold\n    if (typeof options == \"object\") {\n      caseFold = options.caseFold\n    } else { // Backwards compat for when caseFold was the 4th argument\n      caseFold = options\n      options = null\n    }\n\n    if (typeof query == \"string\") {\n      if (caseFold == null) caseFold = false\n      this.matches = function(reverse, pos) {\n        return (reverse ? searchStringBackward : searchStringForward)(doc, query, pos, caseFold)\n      }\n    } else {\n      query = ensureFlags(query, \"gm\")\n      if (!options || options.multiline !== false)\n        this.matches = function(reverse, pos) {\n          return (reverse ? searchRegexpBackwardMultiline : searchRegexpForwardMultiline)(doc, query, pos)\n        }\n      else\n        this.matches = function(reverse, pos) {\n          return (reverse ? searchRegexpBackward : searchRegexpForward)(doc, query, pos)\n        }\n    }\n  }\n\n  SearchCursor.prototype = {\n    findNext: function() {return this.find(false)},\n    findPrevious: function() {return this.find(true)},\n\n    find: function(reverse) {\n      var head = this.doc.clipPos(reverse ? this.pos.from : this.pos.to);\n      if (this.afterEmptyMatch && this.atOccurrence) {\n        // do not return the same 0 width match twice\n        head = Pos(head.line, head.ch)\n        if (reverse) {\n          head.ch--;\n          if (head.ch < 0) {\n            head.line--;\n            head.ch = (this.doc.getLine(head.line) || \"\").length;\n          }\n        } else {\n          head.ch++;\n          if (head.ch > (this.doc.getLine(head.line) || \"\").length) {\n            head.ch = 0;\n            head.line++;\n          }\n        }\n        if (CodeMirror.cmpPos(head, this.doc.clipPos(head)) != 0) {\n           return this.atOccurrence = false\n        }\n      }\n      var result = this.matches(reverse, head)\n      this.afterEmptyMatch = result && CodeMirror.cmpPos(result.from, result.to) == 0\n\n      if (result) {\n        this.pos = result\n        this.atOccurrence = true\n        return this.pos.match || true\n      } else {\n        var end = Pos(reverse ? this.doc.firstLine() : this.doc.lastLine() + 1, 0)\n        this.pos = {from: end, to: end}\n        return this.atOccurrence = false\n      }\n    },\n\n    from: function() {if (this.atOccurrence) return this.pos.from},\n    to: function() {if (this.atOccurrence) return this.pos.to},\n\n    replace: function(newText, origin) {\n      if (!this.atOccurrence) return\n      var lines = CodeMirror.splitLines(newText)\n      this.doc.replaceRange(lines, this.pos.from, this.pos.to, origin)\n      this.pos.to = Pos(this.pos.from.line + lines.length - 1,\n                        lines[lines.length - 1].length + (lines.length == 1 ? this.pos.from.ch : 0))\n    }\n  }\n\n  CodeMirror.defineExtension(\"getSearchCursor\", function(query, pos, caseFold) {\n    return new SearchCursor(this.doc, query, pos, caseFold)\n  })\n  CodeMirror.defineDocExtension(\"getSearchCursor\", function(query, pos, caseFold) {\n    return new SearchCursor(this, query, pos, caseFold)\n  })\n\n  CodeMirror.defineExtension(\"selectMatches\", function(query, caseFold) {\n    var ranges = []\n    var cur = this.getSearchCursor(query, this.getCursor(\"from\"), caseFold)\n    while (cur.findNext()) {\n      if (CodeMirror.cmpPos(cur.to(), this.getCursor(\"to\")) > 0) break\n      ranges.push({anchor: cur.from(), head: cur.to()})\n    }\n    if (ranges.length)\n      this.setSelections(ranges, 0)\n  })\n});\n"},"lineCount":307}},"error":null,"hash":"82fe89e1719117e0facd90872450d1b2","cacheData":{"env":{}}}